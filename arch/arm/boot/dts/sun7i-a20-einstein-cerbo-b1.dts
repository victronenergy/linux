/*
 * Copyright (C) 2018 Mans Rullgard <mans@mansr.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "sun7i-a20-einstein.dtsi"
#include <dt-bindings/input/input.h>

/ {
	model = "Cerbo GX";
	compatible = "victronenergy,cerbo-gx-b1",
		     "cubietech,einstein",
		     "allwinner,sun7i-a20";

	aliases {
		ethernet0 = &emac;
		nvmem0 = &board_id;
		nvmem1 = &edid;
		rtc0 = &rtc0;
		rtc1 = &rtc;
		watchdog0 = &ext_wdt;
		watchdog1 = &wdt;
	};

	hdmi-connector {
		compatible = "hdmi-connector";
		type = "a";
		ddc-i2c-bus = <&i2c2>;

		port {
			hdmi_con_in: endpoint {
				remote-endpoint = <&hdmi_out_con>;
			};
		};
	};

	button {
		compatible = "gpio-keys";

		button {
			linux,code = <KEY_CONFIG>;
			gpios = <&pio 7 8 GPIO_ACTIVE_LOW>; /* PH8 */
		};
	};

	leds {
		compatible = "gpio-leds";

		led-status-green {
			label = "status-green";
			gpios = <&pio 6 6 GPIO_ACTIVE_HIGH>; /* PG6 */
			default-state = "off";
		};

		led-status-orange {
			label = "status-orange";
			gpios = <&pio 6 7 GPIO_ACTIVE_HIGH>; /* PG7 */
			linux,default-trigger = "blink-slow";
		};

		led-bluetooth {
			label = "bluetooth";
			gpios = <&pio 6 8 GPIO_ACTIVE_HIGH>; /* PG8 */
			default-state = "off";
		};
	};

	buzzer {
		compatible = "pwm-beeper";
		pwms = <&pwm 0 1000000 0>;
	};

	ext_wdt: watchdog {
		compatible = "linux,wdt-gpio";
		gpios = <&pio 0 11 GPIO_ACTIVE_HIGH>; /* PA11 */
		hw_algo = "toggle";
		hw_margin_ms = <30000>;
		always-running;
	};

	pmic-sensors {
		compatible = "iio-hwmon";
		io-channels = <&axp_adc 0>, <&axp_adc 1>,
			      <&axp_adc 4>, <&axp_adc 7>;
	};

	can_clk: can-clk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <40000000>;
	};

	reg_usb0_vbus: usb0-vbus {
		compatible = "regulator-fixed";
		regulator-name = "usb0-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
		gpio = <&pio 3 2 GPIO_ACTIVE_HIGH>; /* PD2 */
	};

	reg_usb1_vbus: usb1-vbus {
		compatible = "regulator-fixed";
		regulator-name = "usb1-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		enable-active-high;
		gpio = <&pio 3 1 GPIO_ACTIVE_HIGH>; /* PD1 */
	};

	reg_usb2_vbus: usb2-vbus {
		compatible = "regulator-fixed";
		regulator-name = "usb2-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
		gpio = <&pio 3 0 GPIO_ACTIVE_HIGH>; /* PD0 */
	};
};

&de {
	status = "okay";
};

&hdmi {
	status = "okay";
};

&hdmi_out {
	hdmi_out_con: endpoint {
		remote-endpoint = <&hdmi_con_in>;
	};
};

&can0 {
	pinctrl-names = "default";
	pinctrl-0 = <&can_pa_pins>;
	status = "okay";
};

&emac {
	pinctrl-names = "default";
	pinctrl-0 = <&emac_pah_pins>;
	phy-handle = <&phy0>;
	phy-mode = "mii";
	status = "okay";
};

&emac_sram {
	status = "okay";
};

&mdio {
	reset-gpios = <&pio 7 27 GPIO_ACTIVE_LOW>; /* PH27 */
	reset-delay-us = <10000>;
	reset-post-delay-us = <10000>;
	status = "okay";

	phy0: ethernet-phy@0 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <0>;
		clocks = <&mii_phy_tx_clk>;
		smsc,disable-energy-detect;
	};
};

&mmc0 {
	cd-gpios = <&pio 8 10 GPIO_ACTIVE_LOW>; /* PI10 */
	status = "okay";
};

&mmc3 {
	status = "disabled";
};

&i2c1 {
	status = "okay";

	board_id: eeprom@50 {
		compatible = "atmel,24c02";
		reg = <0x50>;
		pagesize = <16>;
		read-only;
	};

	rtc0: rtc@68 {
		compatible = "nxp,pcf8523";
		status = "okay";
		reg = <0x68>;
	};
};

&i2c2 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c2_pins>;
	pinctrl-1 = <&i2c2_gpio_pins>;
	scl-gpios = <&pio 1 20 GPIO_ACTIVE_HIGH>; /* PB20 */
	sda-gpios = <&pio 1 21 GPIO_ACTIVE_HIGH>; /* PB21 */
	status = "okay";

	touchscreen@38 {
		compatible = "edt,edt-ft5316", "edt,edt-ft5306";
		reg = <0x38>;
		vcc-supply = <&reg_usb1_vbus>;
		interrupt-parent = <&pio>;
		interrupts = <8 11 IRQ_TYPE_EDGE_FALLING>;
	};

	edid: eeprom@50 {
		compatible = "atmel,24c02";
		reg = <0x50>;
		vcc-supply = <&reg_usb1_vbus>;
		pagesize = <16>;
		read-only;
	};

	backlight@51 {
		compatible = "victronenergy,gxdisp-backlight";
		reg = <0x51>;
		vcc-supply = <&reg_usb1_vbus>;
		default-on;
		default-brightness = <15>;
	};
};

&i2c3 {
	status = "okay";

	adc@48 {
		compatible = "ti,tla2024";
		reg = <0x48>;

		ain0 {
			single-channel = <0>;
		};

		ain1 {
			single-channel = <1>;
		};

		ain2 {
			single-channel = <2>;
		};

		ain3 {
			single-channel = <3>;
		};
	};

	adc@49 {
		compatible = "ti,tla2024";
		reg = <0x49>;

		ain0 {
			single-channel = <0>;
		};

		ain1 {
			single-channel = <1>;
		};

		ain2 {
			single-channel = <2>;
		};

		ain3 {
			single-channel = <3>;
		};
	};
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm0_pin>;
	status = "okay";
};

&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi2_pb_pins>, <&spi2_cs0_pb_pin>;
	status = "okay";

	assigned-clocks = <&ccu CLK_SPI2>;
	assigned-clock-rates = <600000000>;

	can1: can@0 {
		compatible = "microchip,mcp2518fd";
		reg = <0>;
		spi-max-frequency = <20000000>;
		clocks = <&can_clk>;
		interrupt-parent = <&pio>;
		interrupts = <8 13 IRQ_TYPE_LEVEL_LOW>; /* PI13 */
		microchip,rx-int-gpios = <&pio 8 14 GPIO_ACTIVE_LOW>; /* PI14 */
	};
};

&uart1 {
	status = "disabled";
};

&uart2 {
	status = "disabled";
};

&uart3 {
	status = "disabled";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_ph_pins>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_ph_pins>;
	status = "okay";
};

&uart6 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart6_pa_pins>;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart7_pa_pins>;
	status = "okay";
};

&usb_otg {
	dr_mode = "host";
	status = "okay";

	#address-cells = <1>;
	#size-cells = <0>;

	wireless-controller@1 {
		compatible = "usbbda,d723";
		reg = <1>;
	};
};

&otg_sram {
	status = "okay";
};

&ehci0 {
	status = "okay";
};

&ohci0 {
	status = "okay";
};

&ehci1 {
	status = "okay";

	#address-cells = <1>;
	#size-cells = <0>;

	usb-hub@1 {
		compatible = "usb424,2422";
		reg = <1>;
	};
};

&ohci1 {
	status = "disabled";
};

&usbphy {
	usb0_vbus-supply = <&reg_usb0_vbus>;
	usb1_vbus-supply = <&reg_usb1_vbus>;
	usb2_vbus-supply = <&reg_usb2_vbus>;
	status = "okay";
};

&pio {
	gpio-line-names =
		"relay_1",
		"relay_2",
		"digital_input_3",
		"digital_input_2",
		"digital_input_1",
		"digital_input_4",
		"mkx_rst",
		"vebus_standby";
	gpio-line-numbers =
		<4>,		/* PA4 */
		<5>,		/* PA5 */
		<224>,		/* PH0 */
		<225>,		/* PH1 */
		<226>,		/* PH2 */
		<227>,		/* PH3 */
		<122>,		/* PD26 */
		<123>;		/* PD27 */

	emac_pah_pins: emac-pah-pins {
		pins = "PA0", "PA1", "PA2", "PA3",
		       "PH14", "PH15", "PH16", "PH17",
		       "PA8", "PH19", "PH20", "PH21",
		       "PH22", "PH23", "PH24", "PH25",
		       "PH26";
		function = "emac";
	};

	i2c2_gpio_pins: i2c2-gpio-pins {
		pins = "PB20", "PB21";
		function = "gpio_out";
	};
};
